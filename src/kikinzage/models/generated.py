# generated by datamodel-codegen:
#   filename:  https://developer.kadaster.nl/schemas/kik-inzage/6.0.x/openapi.yaml
#   timestamp: 2023-06-13T15:07:50+00:00

from datetime import datetime
from typing import List
from typing import Optional

from pydantic import AnyUrl
from pydantic import BaseModel
from pydantic import Field

from .collectie import FieldOnroerendeZaak
from .enum import Formaat
from .enum import SeverityCode
from .misc import NEN3610ID
from .misc import PointGeoJSON
from .misc import Waardelijst
from .product import AdresTreffersProduct
from .product import DatuminformatieProduct
from .product import EigenaarsinformatieProduct
from .product import EigendomsinformatieProduct
from .product import HypotheekinformatieProduct
from .product import MeldingProduct
from .product import NegatieveMededelingProduct
from .product import ObjectlijstPersoonProduct
from .product import OvergegaanInProduct
from .product import PostcodeTreffersProduct


class DownloadGegevens(BaseModel):
    download_url: Optional[str] = Field(None, alias="downloadUrl")
    afgifte_id: Optional[str] = Field(None, alias="afgifteId")


class Foutbericht(BaseModel):
    type: Optional[AnyUrl] = Field(
        None, description="Link naar meer informatie over deze fout"
    )
    title: Optional[str] = Field(None, description="Beschrijving van de fout")
    status: Optional[int] = Field(None, description="Http status code")
    detail: Optional[str] = Field(None, description="Details over de fout")


class GeleverdProductBrondocument(BaseModel):
    product: Optional[DownloadGegevens] = None
    authentieke_akte: Optional[DownloadGegevens] = Field(None, alias="authentiekeAkte")


class GeleverdProductDatuminformatie(BaseModel):
    product: Optional[DatuminformatieProduct] = None


class InvalidParam(BaseModel):
    type: Optional[AnyUrl] = None
    name: Optional[str] = Field(None, description="Naam van de parameter")
    reason: Optional[str] = Field(
        None, description="Beschrijving van de fout op de parameterwaarde"
    )


class Melding(BaseModel):
    code: Optional[str] = None
    omschrijving: Optional[str] = None
    severity_code: Optional[SeverityCode] = Field(None, alias="severityCode")


class ProcesVerwerking(BaseModel):
    proces_verwerkingscode: Optional[int] = Field(None, alias="procesVerwerkingscode")
    severity_code: Optional[SeverityCode] = Field(None, alias="severityCode")
    meldingen: Optional[List[Melding]] = None


class ProductGegevens(BaseModel):
    klantreferentie: Optional[str] = None
    productieordernummer: Optional[str] = None
    tijdstip_samenstelling_bericht: Optional[datetime] = Field(
        None, alias="tijdstipSamenstellingBericht"
    )
    aantal_kadastrale_objecten: Optional[int] = Field(
        None, alias="aantalKadastraleObjecten"
    )
    aanvraag_gegevens: Optional[str] = Field(None, alias="aanvraagGegevens")
    meldingen_product: Optional[List[MeldingProduct]] = Field(
        None, alias="meldingenProduct"
    )


class Brondocument(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductBrondocument] = Field(
        None, alias="geleverdProduct"
    )


class BsnBody(BaseModel):
    burgerservicenummer: str = Field(..., pattern="^([0][0-9]{8})|([1-9][0-9]{7,8})$")
    formaat: Formaat
    klantreferentie: str = Field(..., max_length=20, min_length=3)
    gebruikeridentificatie: Optional[str] = Field(None, max_length=20)
    hyperlinkopproduct: Optional[bool] = None
    inkoopnummer: Optional[str] = Field(None, max_length=35)
    referentienummer: Optional[str] = Field(None, max_length=35)


class Datuminformatie(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductDatuminformatie] = Field(
        None, alias="geleverdProduct"
    )


class FoutberichtBadRequest(Foutbericht):
    invalid_params: Optional[List[InvalidParam]] = Field(
        None,
        alias="invalidParams",
        description="Foutmelding per fout in een parameter. Alle gevonden fouten worden één keer teruggemeld.",
    )


class GeleverdProductKadastraalPersoonIdentificatie(BaseModel):
    negatieve_mededeling: Optional[NegatieveMededelingProduct] = Field(
        None, alias="negatieveMededeling"
    )
    product: Optional[NEN3610ID] = None


class KadastraalPersoonIdentificatie(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[NEN3610ID] = Field(None, alias="geleverdProduct")
    geleverd_product_kpi: Optional[
        GeleverdProductKadastraalPersoonIdentificatie
    ] = Field(None, alias="geleverdProductKPI")


class TypeOppervlak(BaseModel):
    soort_grootte: Optional[Waardelijst] = Field(None, alias="soortGrootte")
    waarde: Optional[float] = None


class Appartementsrecht(FieldOnroerendeZaak):
    pass


class Leidingnetwerk(FieldOnroerendeZaak):
    aard: Optional[Waardelijst] = None
    omschrijving: Optional[str] = None


class Perceel(FieldOnroerendeZaak):
    kadastrale_grootte: Optional[TypeOppervlak] = Field(None, alias="kadastraleGrootte")
    indicatie_meettarief_verschuldigd: Optional[bool] = Field(
        None, alias="indicatieMeettariefVerschuldigd"
    )
    plaatscoordinaten: Optional[PointGeoJSON] = None


class GeleverdProductEigenaarsinformatie(BaseModel):
    negatieve_mededeling: Optional[NegatieveMededelingProduct] = Field(
        None, alias="negatieveMededeling"
    )
    product: Optional[EigenaarsinformatieProduct] = None
    pdf: Optional[str] = None


class GeleverdProductObjectlijstPersoon(BaseModel):
    negatieve_mededeling: Optional[NegatieveMededelingProduct] = Field(
        None, alias="negatieveMededeling"
    )
    product: Optional[ObjectlijstPersoonProduct] = None
    pdf: Optional[str] = None


class ObjectlijstPersoon(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductObjectlijstPersoon] = Field(
        None, alias="geleverdProduct"
    )


class Eigenaarsinformatie(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductEigenaarsinformatie] = Field(
        None, alias="geleverdProduct"
    )


class GeleverdProductEigendomsinformatie(BaseModel):
    product: Optional[EigendomsinformatieProduct] = None
    pdf: Optional[str] = None
    postcode_treffers: Optional[PostcodeTreffersProduct] = Field(
        None, alias="postcodeTreffers"
    )
    overgegaan_in: Optional[OvergegaanInProduct] = Field(None, alias="overgegaanIn")
    adres_treffers: Optional[AdresTreffersProduct] = Field(None, alias="adresTreffers")


class GeleverdProductHypotheekinformatie(BaseModel):
    product: Optional[HypotheekinformatieProduct] = None
    pdf: Optional[str] = None
    postcode_treffers: Optional[PostcodeTreffersProduct] = Field(
        None, alias="postcodeTreffers"
    )
    overgegaan_in: Optional[OvergegaanInProduct] = Field(None, alias="overgegaanIn")
    adres_treffers: Optional[AdresTreffersProduct] = Field(None, alias="adresTreffers")


class GeleverdProductKadastraleKaart(BaseModel):
    pdf: Optional[str] = None
    postcode_treffers: Optional[PostcodeTreffersProduct] = Field(
        None, alias="postcodeTreffers"
    )
    overgegaan_in: Optional[OvergegaanInProduct] = Field(None, alias="overgegaanIn")
    adres_treffers: Optional[AdresTreffersProduct] = Field(None, alias="adresTreffers")


class Hypotheekinformatie(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductHypotheekinformatie] = Field(
        None, alias="geleverdProduct"
    )


class KadastraleKaart(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductKadastraleKaart] = Field(
        None, alias="geleverdProduct"
    )


class Eigendomsinformatie(BaseModel):
    proces: Optional[ProcesVerwerking] = None
    product_gegevens: Optional[ProductGegevens] = Field(None, alias="productGegevens")
    geleverd_product: Optional[GeleverdProductEigendomsinformatie] = Field(
        None, alias="geleverdProduct"
    )
